{"result": "passed", "model_name": "std", "repository": "pyjks", "full_method_name": "bitstring_to_bytes", "method_path": "../srcdata/Cryptography/pyjks/jks/util.py", "method_code_mask": "from __future__ import print_function\nimport textwrap\nimport base64\nimport struct\n\n\ndef bitstring_to_bytes(bitstr): [MASK]\n", "response": "from __future__ import print_function\nimport textwrap\nimport base64\nimport struct\ndef bitstring_to_bytes(bitstr):\n    \"\"\"\n    Converts a pyasn1 univ.BitString instance to byte sequence of type 'bytes'.\n    The bit string is interpreted big-endian and is left-padded with 0 bits to form a multiple of 8.\n    \"\"\"\n    bitlist = list(bitstr)\n    bits_missing = (8 - len(bitlist) % 8) % 8\n    bitlist = [0] * bits_missing + bitlist\n    result = bytearray()\n    for i in range(0, len(bitlist), 8):\n        byte = 0\n        for j in range(8):\n            byte = byte << 1 | bitlist[i + j]\n        result.append(byte)\n    return bytes(result)"}
