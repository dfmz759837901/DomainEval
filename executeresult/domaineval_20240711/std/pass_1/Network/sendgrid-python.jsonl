{"result": "passed", "model_name": "std", "repository": "sendgrid-python", "full_method_name": "get_all_ip", "method_path": "../srcdata/Network/sendgrid-python/test/unit/test_unassigned.py", "method_code_mask": "import json\nfrom sendgrid.helpers.endpoints.ip.unassigned import unassigned\nret_json = \"\"\"[ {\n\t\"ip\": \"167.89.21.3\",\n        \"pools\": [\n\t\t\"pool1\",\n\t\"pool2\"\n\t],\n        \"whitelabeled\": false,\n        \"start_date\": 1409616000,\n        \"subusers\": [\n          \"tim@sendgrid.net\"\n        ],\n        \"warmup\": false,\n        \"assigned_at\": 1482883200\n      },\n      {\n        \"ip\": \"192.168.1.1\",\n        \"pools\": [\n          \"pool1\",\n          \"pool2\"\n        ],\n        \"whitelabeled\": false,\n        \"start_date\": 1409616000,\n        \"subusers\": [\n          \"tim@sendgrid.net\"\n        ],\n        \"warmup\": false,\n        \"assigned_at\": 1482883200\n      },\n      {\n        \"ip\": \"208.115.214.22\",\n        \"pools\": [],\n        \"whitelabeled\": true,\n        \"rdns\": \"o1.email.burgermail.com\",\n        \"start_date\": 1409616000,\n        \"subusers\": [],\n        \"warmup\": false,\n        \"assigned_at\": 1482883200\n      },\n      {\n        \"ip\": \"208.115.214.23\",\n        \"pools\": [],\n        \"whitelabeled\": true,\n        \"rdns\": \"o1.email.burgermail.com\",\n        \"start_date\": 1409616000,\n        \"subusers\": [],\n        \"warmup\": false,\n        \"assigned_at\": 1482883200\n\n      } ]\n      \"\"\"\n\n\ndef get_all_ip(): [MASK]\n", "response": "import json\nfrom sendgrid.helpers.endpoints.ip.unassigned import unassigned\nret_json = \"\"\"[ {\n\t\"ip\": \"167.89.21.3\",\n        \"pools\": [\n\t\t\"pool1\",\n\t\"pool2\"\n\t],\n        \"whitelabeled\": false,\n        \"start_date\": 1409616000,\n        \"subusers\": [\n          \"tim@sendgrid.net\"\n        ],\n        \"warmup\": false,\n        \"assigned_at\": 1482883200\n      },\n      {\n        \"ip\": \"192.168.1.1\",\n        \"pools\": [\n          \"pool1\",\n          \"pool2\"\n        ],\n        \"whitelabeled\": false,\n        \"start_date\": 1409616000,\n        \"subusers\": [\n          \"tim@sendgrid.net\"\n        ],\n        \"warmup\": false,\n        \"assigned_at\": 1482883200\n      },\n      {\n        \"ip\": \"208.115.214.22\",\n        \"pools\": [],\n        \"whitelabeled\": true,\n        \"rdns\": \"o1.email.burgermail.com\",\n        \"start_date\": 1409616000,\n        \"subusers\": [],\n        \"warmup\": false,\n        \"assigned_at\": 1482883200\n      },\n      {\n        \"ip\": \"208.115.214.23\",\n        \"pools\": [],\n        \"whitelabeled\": true,\n        \"rdns\": \"o1.email.burgermail.com\",\n        \"start_date\": 1409616000,\n        \"subusers\": [],\n        \"warmup\": false,\n        \"assigned_at\": 1482883200\n\n      } ]\n      \"\"\"\ndef get_all_ip():\n    ret_val = json.loads(ret_json)\n    return ret_val"}
{"result": "passed", "model_name": "std", "repository": "sendgrid-python", "full_method_name": "make_data", "method_path": "../srcdata/Network/sendgrid-python/test/unit/test_unassigned.py", "method_code_mask": "import json\nfrom sendgrid.helpers.endpoints.ip.unassigned import unassigned\n\n\ndef make_data(): [MASK]\n", "response": "import json\nfrom sendgrid.helpers.endpoints.ip.unassigned import unassigned\ndef make_data():\n    data = set()\n    data.add('208.115.214.23')\n    data.add('208.115.214.22')\n    return data"}
{"result": "passed", "model_name": "std", "repository": "sendgrid-python", "full_method_name": "unassigned", "method_path": "../srcdata/Network/sendgrid-python/sendgrid/helpers/endpoints/ip/unassigned.py", "method_code_mask": "import json\n\n\ndef unassigned(data, as_json=False): [MASK]\n", "response": "import json\ndef unassigned(data, as_json=False):\n    \"\"\" https://sendgrid.com/docs/API_Reference/api_v3.html#ip-addresses\n        The /ips rest endpoint returns information about the IP addresses\n        and the usernames assigned to an IP\n\n        unassigned returns a listing of the IP addresses that are allocated\n        but have 0 users assigned\n\n\n        data (response.body from sg.client.ips.get())\n        as_json False -> get list of dicts\n                True  -> get json object\n\n        example:\n        sg = sendgrid.SendGridAPIClient(os.environ.get('SENDGRID_API_KEY'))\n\n        params = {\n            'subuser': 'test_string',\n            'ip': 'test_string',\n            'limit': 1,\n            'exclude_whitelabels':\n            'true', 'offset': 1\n        }\n        response = sg.client.ips.get(query_params=params)\n        if response.status_code == 201:\n           data = response.body\n           unused = unassigned(data)\n    \"\"\"\n    no_subusers = set()\n    if not isinstance(data, list):\n        return format_ret(no_subusers, as_json=as_json)\n    for current in data:\n        num_subusers = len(current['subusers'])\n        if num_subusers == 0:\n            current_ip = current['ip']\n            no_subusers.add(current_ip)\n    ret_val = format_ret(no_subusers, as_json=as_json)\n    return ret_val"}
