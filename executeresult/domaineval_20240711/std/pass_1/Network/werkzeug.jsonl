{"result": "passed", "model_name": "std", "repository": "werkzeug", "full_method_name": "_make_proxy", "method_path": "../srcdata/Network/werkzeug/tests/test_local.py", "method_code_mask": "import asyncio\nimport copy\nimport math\nimport operator\nimport time\nfrom contextvars import ContextVar\nfrom threading import Thread\nimport pytest\nfrom werkzeug import local\n_cv_ns = ContextVar('werkzeug.tests.ns')\n\n\ndef _make_proxy(value): [MASK]\n", "response": "import asyncio\nimport copy\nimport math\nimport operator\nimport time\nfrom contextvars import ContextVar\nfrom threading import Thread\nimport pytest\nfrom werkzeug import local\n_cv_ns = ContextVar('werkzeug.tests.ns')\ndef _make_proxy(value):\n    ns = local.Local(_cv_ns)\n    ns.value = value\n    p = ns('value')\n    return ns, p"}
