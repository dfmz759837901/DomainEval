{"model_name": "std", "repository": "badsecrets", "full_method_name": "write_vlq_string", "method_path": "../srcdata/Cryptography/badsecrets/badsecrets/helpers.py", "response": "import sys\nimport hmac\nimport struct\nimport hashlib\nfrom colorama import Fore\nfrom colorama import Style\nfrom colorama import init\ndef write_vlq_string(string):\n    encoded_string = string.encode('utf-8')\n    length = len(encoded_string)\n    length_vlq = bytearray()\n    while length >= 128:\n        length_vlq.append((length | 128) & 255)\n        length >>= 7\n    length_vlq.append(length)\n    return bytes(length_vlq) + encoded_string", "test_code_list": [{"test_code": "def test_vlq_encoding_multi_bytes():\n    string_128_chars = 'a' * 128\n    string_16384_chars = 'b' * 16384\n    assert write_vlq_string(string_128_chars)[0] == 128\n    assert write_vlq_string(string_16384_chars)[0:2] == bytearray([128, 128])\n\ntest_vlq_encoding_multi_bytes()\n", "code_start": "", "test_path": "../srcdata/Cryptography/badsecrets/tests/misc_test.py"}], "method_code_mask": "import sys\nimport hmac\nimport struct\nimport hashlib\nfrom colorama import Fore\nfrom colorama import Style\nfrom colorama import init\n\n\ndef write_vlq_string(string): [MASK]\n"}
